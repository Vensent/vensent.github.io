<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[FunTouch OS 3.0 Recorder作品展示]]></title>
    <url>%2F2016%2F07%2F20%2F%E5%BD%95%E9%9F%B3%E6%9C%BAROM3-0%E4%BD%9C%E5%93%81%E5%B1%95%E7%A4%BA%2F</url>
    <content type="text"><![CDATA[上半年因为工作需要，开始接触公司的录音机开发。 这次开发的外部代号是FunTouch OS 3.0，开发周期大概在三个月左右。也算是入职一年多笔者真正意义上独自一个人从设计、评审、开发，后续发版本跟进测试完成的一个项目。 因为公司制度，很多东西并不能放到博客上面，本页面只是做展示用。如有读者感兴趣，或者对其中开发细节感兴趣，可以通过邮箱或者github联系到我。 录音机录制var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://home.ustc.edu.cn/~mmmwhy/GEM.mp4","pic":"http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"}}); 录音列表item切换动效var dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://home.ustc.edu.cn/~mmmwhy/GEM.mp4","pic":"http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"}}); 录音列表编辑切换动效var dplayer2 = new DPlayer({"element":document.getElementById("dplayer2"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://home.ustc.edu.cn/~mmmwhy/GEM.mp4","pic":"http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"}});]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>FunTouch OS</tag>
        <tag>Android</tag>
        <tag>Recorder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[当“年”已渐渐远去]]></title>
    <url>%2F2015%2F03%2F23%2F%E5%BD%93%E2%80%9C%E5%B9%B4%E2%80%9D%E5%B7%B2%E6%B8%90%E6%B8%90%E8%BF%9C%E5%8E%BB%2F</url>
    <content type="text"><![CDATA[又是一个春节。和以往一样，大年廿九回到了老家。也如以往一样，这一大家子的人也基本上都回到了这个生育他们养育他们的地方。虽然我对这个地方没有太多的情感，印象中在老家最长最长也只是待过十天半个月，小时候也只有每年过年才会回到这里，但也只有回到了这里，才会有二表哥会带着我去街上玩投币街机买一块钱一盒的鞭炮来放，表姐会和我抢零食，也会在小表妹面前装一装小大人。 而如今，两个表哥都已经有了自己的孩子，在面对他们的时候，我还要把自己微薄的工资掏出来给他们当压岁钱。表妹今年还没有从卫校毕业，她从小不爱读书，以前不论是寒假还是暑假回到老家，过了欺负她的年龄的我总是不厌其烦一遍又一遍地给她讲题，可是呢，她除了哭还是哭。现在也算是出落得亭亭玉立，一声又一声的“奇哥哥”叫的也真是让我愿意多给她发两百块钱。美丽的表姐还是那么美，从小就是她的脑残粉的我，春节回家还是愿意夸她瘦了、美了。这几年和她联系少了很多，只知道她在成都买了房子，生活也安定了不少，今年也计划着要结婚了，姨妈姨爹没事总从乐山带着狗上去看她。 小一辈的这几个孩子也还算顺利，老一辈的外公外婆的状况却真的让人很难放心。自从前年回到老家外公就已经开始记忆力减退，自己嘴里两分钟之前说过的话马上又要继续重复，现在已经很难将家里的成员认全了。我和爸妈回去外公都要反复打量我，然后才可以把我的名字叫出来。现在的外公沉默寡言，时常走丢，幸好有在县城交警队当大队长的三叔发动整个县城的交警力量，才得以在每一次走失之后全城搜索给找回来。 外婆自从前年在路上走着被人撞了一下导致左臂骨折，去年还能勉强走动和我们到处散步，今年心脏已经逐步开始衰竭，卧床在家，脸部也有浮肿，轻微的走动也会觉得很累。不过好在记性一直不错，脑子还是灵光的。一家人说话的时候偶尔也还能够插上两句。看见我因为工作给了她几百元钱也会眼泛泪光。 年夜饭，一家人入席准备就绪。这个时候外公举起自己手中的杯子站起来，说到“祝大家新年快乐，来年兴旺！”要知道，那一天下午我带着外公出门散步，看着街上挂起来的很多的红灯笼，我问外公这是什么节日，他斟酌了半天回答我说不知道。年夜饭，面对这么多的亲人子女，甚至很多已经叫不出名字来了，却也是激动地说出了上面这样的一番话。话后眼泪流了出来，全家人也都激动地流下了眼泪。这么些年的春节，我相信这一幕是最最让我觉得难以忘怀和感动的。今后的日子，不求外公外婆康复，不奢求他们像以前一样健康，只是希望我们每年回到老家，他们都还在！让我们再多几个有二老的春节。 春节之于我们的意义有太多。以前从来觉得春节很无聊，真的。因为感觉老家是自己父母生长的地方，自己没有太多的感触。和哥哥姐姐们也因为没有一起成长而少了很多共同记忆，代沟也是格外明显。话不多，也总觉得聊不到一起。家里人总是说我有多高在哪读书，因为我无论回答了多少遍他们也都还会问。但是这一次我发现，也只有春节全家人才会坐在一起，聊聊天说说未来，家里人的情况才会更加清楚一些。也只有这样的时刻才知道自己的根原来一直深深扎根在这里。无论离开多远，实际上都不曾离去。 当然过年也少不了好朋友的相聚，说实话大学放假的时候倒是有不少的时间去找到自己的高中同学聚一聚，工作了之后发现自己再难找到这样的时间。初五当天奋进会在施询之的组织下大家聚了一下，询妹还是那么水嫩，雨哥一点没变，姝妹倒是爱打扮起来。当然大家一直没忘会名宗旨，努力奋进。我们四个人好像也是高中毕业之后第三次完完整整聚在一起吧。那些在高中岁月一同学习的时光，甚至中午私自出校门吃火锅玩电玩下午第一节化学课全部趴着睡觉的疯狂，或许只能留在回忆中了吧。 那天下午更多的高中同学一起在桌游吧里面玩游戏，大家的近况也都了解了一些。大部分人都在北京深圳上海以及成都，读研或者工作，都还不错。除了丹儿在浙江温州国税当公务员，就我一个人在南京啦。我玩狼人游戏确实智商有些不够用啊，角色太多比杀人游戏复杂太多。仇恨值太高的我总是被杀，基本上没当狼人的几盘都是第一轮都over了（哭），每次死了就乱抛烟雾弹结果游戏在我这样一个死人乱说话之后变得更加有趣了。话说我现在还不明白大家为什么都要这么早杀我，妹的有一盘好不容易我是守卫了第一轮忘了守护自己又over了。哎，大家都太爱我，我懂。 高中同学联系确实比较多，初中的就只有一两个还一直联系着。小镇上初四的夜晚，照例是宵夜烧烤摊儿，半年未见，聊的东西也是挺多。哥们人在四川绵阳，女朋友人漂亮，可惜这次没带回来，工作一般，不太满意，最近在准备省考。没想到他也想通了想入公务员一行。不过他有意长留绵阳，绵阳房价不高，生活也不错，也在计划着在绵阳买房结婚了。我打趣说看来我要早些准备礼金了，说好的我要当他的伴郎的说。 最后，12个半火车小时回到南京，已无在四川的温暖。又是新的一年，又是一季的伊始。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>过年</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开始用信用卡的这一个月]]></title>
    <url>%2F2014%2F10%2F31%2F%E5%BC%80%E5%A7%8B%E7%94%A8%E4%BF%A1%E7%94%A8%E5%8D%A1%E7%9A%84%E8%BF%99%E4%B8%80%E4%B8%AA%E6%9C%88%2F</url>
    <content type="text"><![CDATA[写在前面在开始这篇文章之前，我想讲几个题外话。不久之前看到张晓晗队长（一个我很喜欢的90后美少女作家，微博ID：@张晓晗Oliver）的一篇文章，上面有大概这样的一些文字：刚毕业的是时候人真的没有什么钱，每天过的都是饱一顿饿一顿的生活，四处奔波写剧本。最不济的时候我和男朋友不得不把几张银行卡里面的钱全部转一块儿，只为了在ATM机里面能取出一张100。大二时候在深圳实习，错过了从深圳回武汉的火车，无法把已经在网上订好的火车票取出来。无奈全身上下的零钱加上各张银行卡的余额都没有办法买上一张回程票。没有办法，自己只能打通还在广东朋友的电话，让他来火车站并将钱准备好了给自己买了一张票，真是非常的囧。对，读者你或许可以明白了。如果在我们有了信用卡之后，这一切是不是就不会出现，生活也不会再有这种“钱到用时方恨少”的无奈？ 信用卡的盈利来源相信了解信用卡的人都明白信用卡的宗旨就是鼓励人们“提前消费”，并且在下一个到期还款日到来之前还上上一个月的支出就可以了。这样做相当于消费者提前从银行贷了一部分钱进行消费并在下个月还上这笔贷款，整个过程中信用卡持有者却不出一分钱利息。但是我们有没有想过这样做的话银行是不是会亏死？朋友们也讨论过这个问题。也确实，在中国，通过信用卡实现盈利的银行好像真的不多。银行通过信用卡的收入无非以下几个： 消费者通过消费并分期偿还债务而产生的手续费 银行通过超市、商场、商店收取的费用，每一笔消费要收取商家千分之三的手续费 很明显，国内消费者现阶段使用信用卡都会很快地完成偿还上个月的债务，所以银行收取用户分期的手续费会不多。所以大部分收入还是来自上述的第二点来源。不过我们可以看到，现在的信用卡的发展方向已经变得越来越多样。以用户常用的招商银行信用卡来说，通过线上的渠道，信用卡更多地与线下的商家展开合作和交互，相信这样做也可以给银行带来更多的盈利。 信用卡与经济如果稍微懂一点经济学知识的话，就会知道关于“通货膨胀”的概念。简单说，就是今年这个时候的100元，放到明年这个时候肯定不值这么多了。当然，我不是经济学专业出身的，一个很好的例子可以解释这个概念：如果你把自己的积蓄放在自己的衣柜里，一分不动，一年之后这些钱就会贬值不少。所以从信用卡以及通货膨胀方面考虑，下一个月的钱一定没有上一个月的钱值钱，所以如果每一个月的花销都通过下一个月来偿还，这样做无疑是非常精明的做法，也可以利用“通胀”来为自己省钱。当然，一个月的消费对于消费并不是那样的明显。以笔者为例，笔者在本月通过招行掌上生活的“12期免息购iPhone”购买了iPhone6 64G的手机。那么就这个活动而言，总价值6088的手机通过12期，每期507元左右的偿还方式一方面减轻了消费者的压力，另一方面，12期的分期方式，通过“通货膨胀”最后一期的507元已经过了整整一年，而这期507元肯定没有一年前的507元那样值钱，所以“免息分期”，银行一方面刺激了消费者消费的同时，也为消费者省了不少的钱。关于这一点，知乎上面有一篇文章：国行的iphone6真的比水货更贵吗？通过国行买iPhone6，信用卡无息分期的讨论来得出这样的一个观点：如果消费者的资产年收益率能够达到15%或者以上，可以使用更长期限的偿还方式，这也是笔者非常认可的一个观点：如果会理财，就不要害怕背上身上的债务。短期的债务不会打倒自己，反而可以给自己赢得通过现有资产产生更多的财产的时间。 信用卡的好处如果谈上信用卡的好处，每个人根据自己使用的不同，可能会有不同的理解和感受。笔者就把这一个月使用的感受简单地说一下： 取钱的时候少了因为大部分的生活消费都是在超市，包括买菜购物都是可以刷卡的地方，所以就没有直接用钱来进行支付了（插一句，笔者处女座，有时候接触到钱都感觉脏脏的，接触完了就想洗手，所以信用卡的出现避免了自己这样的烦恼）。因为取钱的时间少了，所以大部分钱都可以躺在“余额宝”里面等着升值。也因此笔者近段时间在尝试一些不同的理财方式，基金和股票也都有在看。希望自己可以可以利用这些钱在一个月的周期中找到更为可观的收益。 积分送好礼招行的信用卡有这样的好处，就是自身会有很多的活动可以给消费者进行选择，比如说积分换好礼、周末电影票等等，而这些活动笔者虽然因为积分较少没有参与过，但是招行这样搭建起来的一个生态还是非常可观的。让人觉得非常不错。 分期付款关于分期付款，褒贬不一。而信用卡的出现也自然产生了这样的一个问题：究竟要不要使用分期付款？分期付款是否真的让自己生活更加被动？其实这个问题各有各的回答方法。这里也有一篇文章来参考：分期付款的意义。简单说，当你的收益率只能通过余额宝来获得不到5%的时候，选择分期无疑是得不偿失的。而如果你的收益率远远超过信用卡12期或者24期的手续费6.55%（招行信用卡的貌似更高一些，达到了8%，或者更高）的时候，那么，选择分期无疑是可以减轻你的负担。当然，通胀的红利，通过主动固化债务，拉长付款周期，带来的好处我们在此处就不再赘述了。结合文中的观点，我认为：如果合理利用分期付款，并规划好了自己的财务计划，你会变得越来越有钱。但是如果利用不好，你将成为债务的奴隶。还是那句话：菜刀是无辜的，砍人还是做饭全在他的主人。 还款方便目前国内各家银行信用卡已经可以支持各种还款方式，比如说支付宝手机钱包就可以支持信用卡的到期自动还款，并且可以自己设定信用卡的还款日期。而招行自己的掌上生活手机客户端也可以支持这样的服务，这些信用卡的服务也是大大地方便了消费者。 总结有的人非常害怕使用信用卡，怕控制不住自己消费的欲望，也怕面对一个月之后出现的账单。这样的心态都是不对的。面对消费，关键还是习大大的那句话：打铁还需自身硬。练好自己的基本功，结合自己的理财知识，才能够一步一步把自己的生活打造得更好，产生更大的收益，从而让自己活得更轻松。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>信用卡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浏览器的那些事儿]]></title>
    <url>%2F2014%2F10%2F21%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%2F</url>
    <content type="text"><![CDATA[枫树浏览器已经很长一段时间不更新了。相反，Chrome的内核却还是像嗑药一样不断地更新着。所以现在无论是在公司还是在自己的笔记本上面用2.0.9.20版本的浏览器也是因为内核没有更新了就慢了。 天行浏览器前段时间同事介绍给我使用了一款叫做XSkyWalker的浏览器，中文名叫做天行浏览器，用了快一个月也是真的醉了，忍无可忍之后将其卸了。总的来说，这款打着翻墙名号的浏览器也确实有其自己的特色，嵌入了代理服务器之后使用过程中不用再开任何的其他的代理就可以嗖嗖嗖地翻墙了。不过在我看来，翻墙对于我来说从来不是难事，SwitchySharp+WallProxy的翻墙方式一直使用了好几年了。所以天行浏览器在我这里就是数不完的缺点了： 没有鼠标手势：Chrome长期没有一个合适的鼠标手势的插件，对于一个长期使用鼠标手势的人来说没有这个简直不能活。 启动的广告：之前我每天打开浏览器的首页都是鲜果抓取的最新博客资讯，好了这家伙总是定位到自己的广告页面，读者可以随意感受一下：http://www.0678.com/，呵呵。 关于标签的操作选项：最明显的一个就是右键可以直接关闭标签页的操作，很遗憾天行浏览器并不支持此项功能。 超级拖拽：这个功能也没有，浏览网页遇到了新词新意的时候怎么办，超级拖拽不能用只能大眼瞪小眼。 搜狗浏览器、360浏览器我最早开始接触的浏览器应该说是搜狗和360，这也不意外。毕竟在中国360浏览器还是使用最多的一款浏览器，搜狗也可以理解，很多用户装搜狗输入法的时候就自带着跟着装上了搜狗浏览器。但是也真的在很长一段使用搜狗浏览器的时间中，我觉得这款浏览器还是非常好用的。急速、IE模式（后来才发现这个完全不是搜狗的原创），最重要的是还有鼠标手势。我现在都还记得自己在第一次看到有人在使用浏览器的时候用到鼠标手势是一件多么酷炫的事情，可能只能用“目瞪口呆”来形容（原谅笔者的无知）。而在后续的使用中也发现很多功能，比如：用户登录及同步，这个功能与书签的使用同步之后让用户在各地使用都显得非常方便。 Chrome、枫树浏览器浏览器也这样用了一阵子，直到遇到了Chrome。Chrome的介绍自不必多说，相信大家都有接触过。当年最早接触Chrome的时候，Chrome的市场占有率还排在IE、FireFox之后，甚至还被遨游抢去了第三。Chrome最大的优势是对于插件的支持，插件的出现可以说是重新定义了浏览器。从前浏览器功能仅仅是浏览网页，而伴随着纷繁复杂的插件的出现，浏览器变得更像是一个整合的桌面。而开始用枫树浏览器也是在这之后。开始使用Chrome了之后就爱不释手，但是也有不足：有些网站必须要通过IE模式访问、鼠标手势的缺失，因此通过创逼的介绍开始使用了枫树浏览器。这一用就是扎扎实实的三年，也见证了枫树浏览器从ChromePlus更名为CoolNovo，再被腾讯收购了之后开发者抛弃了用户不再继续更新。今年上半年枫树开始不再更新，慢慢地Chrome商店里面的很多新的插件已经不能再安装，坚持了半年以为可以等到枫树的更新的支持，却无果。来到公司发现枫树居然连Google账户的数据也无法再同步了，心情也真的有点Down。毕竟是一款跟随了你这么长时间的产品，要说再见是真的有些不容易的。 7Star、coowon最后笔者也去了趟“枫树”的百度贴吧，在其中看到了很多帖子有人说转去了七星浏览器（7Star），还有一些人开始用coowon。当然基于Chrome内核的浏览器还是有很多的，比如小巧的Chromium，呵呵，还有360极速浏览器，等等。笔者也最先是看到了7Star、coowon这两个浏览器：界面上看两款浏览器都是继承了Chrome的一贯风格，不过笔者也从以下几个不同方面来对二者进行一些简单的比较。 coowon是国外产品（但是不得不说中文的翻译支持得真棒！），7Star是国内的产品，鉴于枫树浏览器也有过无良的表现（比如那个什么“神仙道”的游戏），国内产品也确实可能在发展壮大之后出现无良的可能更大。不过在对两款产品比较的时候发现，coowon的默认侧边栏却使用了自带的广告，反而7Star是没有的。 鼠标手势的支持上来看，就像很多贴吧里面很多人的推测一样，7Star的开发者很可能就是枫树的那一帮人，所以鼠标手势和习惯更贴近我的使用习惯，也比coowon更全面和强大。举两个例子：在使用中两个手势“下左”和“下右”可以是不同的操作，7Star可以分别支持“关闭当前标签并激活左侧标签”和“关闭当前标签并激活右侧标签”，但是coowon却无法做到，只能做到“关闭当前标签并激活右侧标签”；另外，7Star支持“向下”最小化窗口，这个也是coowon做不到的。 界面风格上面，感觉coowon的上方的插件的间距更合理；除此之外，整个UI的风格coowon也更好一些，当然这是我的个人感觉。毕竟coowon是一款国外的产品，这方面比国内还是多少强一些的。 浏览器的运行速度：我分别在自己的电脑和公司的台式机上面进行了比较，发现在电脑配置比较低的时候两者的差异还是有细微的差别的：7Star的速度要比coowon慢一些，在笔记本电脑上面运行的时候还是会有一些卡顿的情况。 IE支持：我看这也是贴吧里面很多的吧友在反复讨论的，因为国内很多的金融网站都是需要的（比如说支付宝、网银），安全因素还是有的。而用coowon的时候你会发现根本无法用IE模式啊，连个支付宝的支付页面都打不开，这就略微有点Eggache了。 所以综上，比较二者，我还是选择了7Star并且使用到了现在。]]></content>
      <categories>
        <category>软件·工具</category>
      </categories>
      <tags>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从Java的反射机制说开去-2]]></title>
    <url>%2F2014%2F10%2F10%2F%E4%BB%8EJava%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E8%AF%B4%E5%BC%80%E5%8E%BB-2%2F</url>
    <content type="text"><![CDATA[Android Hotspot的使用接上文：从Java的反射机制说开去。我们知道Android有很多的应用使用了Ap（Access Point）热点。而很多的应用也开始越来越多地使用Ap，比如最近很火的“闪传”，“QQ近传”等等。笔者在写这样的一个简单的开启热点的时候却遇到了问题。具体来说就是必须要使用到反射机制来解决，现在先看代码。 调用的代码1234567891011public static void turnOnOffHotspot(Context context, boolean isTurnToOn) &#123; WifiManager wifiManager = (WifiManager) context .getSystemService(Context.WIFI_SERVICE); WifiApControl apControl = WifiApControl.getApControl(wifiManager); if (apControl != null ) &#123; // 使用WifiManager来关闭wifi wifiManager.setWifiEnabled(false); apControl.setWifiApEnabled(apControl.getWifiApConfiguration(), isTurnToOn); &#125;&#125; 其中WifiApControl是自己写好的一个类，代码比较长，不过如果理解了反射机制的话还是很好理解的，贴下来如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697/** * This class is use to handle all Hotspot related information. * */public class WifiApControl &#123; private static Method getWifiApState; private static Method isWifiApEnabled; private static Method setWifiApEnabled; private static Method getWifiApConfiguration; public static final String WIFI_AP_STATE_CHANGED_ACTION = "android.net.wifi.WIFI_AP_STATE_CHANGED"; public static final int WIFI_AP_STATE_DISABLED = WifiManager.WIFI_STATE_DISABLED; public static final int WIFI_AP_STATE_DISABLING = WifiManager.WIFI_STATE_DISABLING; public static final int WIFI_AP_STATE_ENABLED = WifiManager.WIFI_STATE_ENABLED; public static final int WIFI_AP_STATE_ENABLING = WifiManager.WIFI_STATE_ENABLING; public static final int WIFI_AP_STATE_FAILED = WifiManager.WIFI_STATE_UNKNOWN; public static final String EXTRA_PREVIOUS_WIFI_AP_STATE = WifiManager.EXTRA_PREVIOUS_WIFI_STATE; public static final String EXTRA_WIFI_AP_STATE = WifiManager.EXTRA_WIFI_STATE; static &#123; // lookup methods and fields not defined publicly in the SDK. Class&lt;?&gt; cls = WifiManager.class; // nameList用于打印出WifiManager中的所有方法 ArrayList&lt;String&gt; nameList = new ArrayList&lt;String&gt;(); for (Method method : cls.getDeclaredMethods()) &#123; String methodName = method.getName(); nameList.add(methodName); if (methodName.equals("getWifiApState")) &#123; getWifiApState = method; &#125; else if (methodName.equals("isWifiApEnabled")) &#123; isWifiApEnabled = method; &#125; else if (methodName.equals("setWifiApEnabled")) &#123; setWifiApEnabled = method; &#125; else if (methodName.equals("getWifiApConfiguration")) &#123; getWifiApConfiguration = method; &#125; &#125; // 用在调试 nameList.add("0"); &#125; public static boolean isApSupported() &#123; return (getWifiApState != null &amp;&amp; isWifiApEnabled != null &amp;&amp; setWifiApEnabled != null &amp;&amp; getWifiApConfiguration != null); &#125; private WifiManager mgr; private WifiApControl(WifiManager mgr) &#123; this.mgr = mgr; &#125; public static WifiApControl getApControl(WifiManager mgr) &#123; if (!isApSupported()) return null; return new WifiApControl(mgr); &#125; public boolean isWifiApEnabled() &#123; try &#123; return (Boolean) isWifiApEnabled.invoke(mgr); &#125; catch (Exception e) &#123; Log.v("BatPhone", e.toString(), e); // shouldn't happen return false; &#125; &#125; public int getWifiApState() &#123; try &#123; return (Integer) getWifiApState.invoke(mgr); &#125; catch (Exception e) &#123; Log.v("BatPhone", e.toString(), e); // shouldn't happen return -1; &#125; &#125; public WifiConfiguration getWifiApConfiguration() &#123; try &#123; return (WifiConfiguration) getWifiApConfiguration.invoke(mgr); &#125; catch (Exception e) &#123; Log.v("BatPhone", e.toString(), e); // shouldn't happen return null; &#125; &#125; public boolean setWifiApEnabled(WifiConfiguration config, boolean enabled) &#123; try &#123; return (Boolean) setWifiApEnabled.invoke(mgr, config, enabled); &#125; catch (Exception e) &#123; Log.v("BatPhone", e.toString(), e); // shouldn't happen return false; &#125; &#125;&#125; 代码分析通过反射机制，可以看出来在WifiApControl中是为了获得WifiManager类中的getWifiApState、isWifiApEnabled、setWifiApEnabled、getWifiApConfiguration这四个方法。但是其中WifiManager中没有这些方法么？我们具体点开可以看看，以下是代码中显示的WifiManager的所有方法： 而以上四种方法是都没有的。那没有的话为什么可以获取到呢？我们通过调试进入断点看一看： 可以看出在用反射机制去获得WifiManager中的所有方法的时候，是可以得到的这四个方法的。那么究竟是怎么一回事呢？ 原因分析进入Android的platform_framworks_base的源码去看一下。代码在这里也可以看到：WifiManager.java。以getWifiApState为例，其中定义代码在如下：12345678910111213141516/** * Gets the Wi-Fi enabled state. * @return One of &#123;@link #WIFI_AP_STATE_DISABLED&#125;, * &#123;@link #WIFI_AP_STATE_DISABLING&#125;, &#123;@link #WIFI_AP_STATE_ENABLED&#125;, * &#123;@link #WIFI_AP_STATE_ENABLING&#125;, &#123;@link #WIFI_AP_STATE_FAILED&#125; * @see #isWifiApEnabled() * * @hide Dont open yet */public int getWifiApState() &#123; try &#123; return mService.getWifiApEnabledState(); &#125; catch (RemoteException e) &#123; return WIFI_AP_STATE_FAILED; &#125;&#125; 其中在注释中的@hide Dont open yet是就是我们找到的原因。原来API自己把这些方法隐藏了。而在Eclipse中通过.class的反编译的结果查看的时候是看不到这些方法的。笔者猜测Google这样做的原因可能是因为这些API属于内部逻辑，不想对外暴露，也有可能是API接口还未最终确定下来。所以在低版本Android上的隐藏API不一定能在高版本的Android上使用。这点是一定要注意的。也就说隐藏API的兼容性比较差。因此利用反射调用隐藏API时，一定要注意根据Android的版本采用不同的方式去反射。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>反射机制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从Java的反射机制说开去-1]]></title>
    <url>%2F2014%2F10%2F10%2F%E4%BB%8EJava%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E8%AF%B4%E5%BC%80%E5%8E%BB-1%2F</url>
    <content type="text"><![CDATA[最近在写Android的时候用到了一些关于Java反射机制的内容。Java的反射机制也是在面试过程中常考的，这里就好好地将它们回顾一下。 什么是Java的反射机制Java比起其他的语言，最大的特点就是“面向对象”。而怎么合理地理解“面向对象”的概念则是需要大量的编程练习的积累。通俗地说，反射机制就是可以把一个类，类的成员（函数、变量），当成一个对象来操作，希望读者能理解。也就是说，类、类的成员，在运行需要的时候可以动态地去操作它们。下面就用一个例子来具体地说明。 反射机制的Demo在这里只就类的函数的反射来说明一下。先是一个自己写的Student类，无须赘述： 12345678910111213141516171819202122232425262728public class Student &#123; private String name; private int age; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; public Student() &#123; &#125; public void print() &#123; System.out.println("This Student is: " + name + ","); System.out.println("This Student is " + age + " years old."); &#125;&#125; 接下来就是关于反射的使用：123456789101112131415161718192021222324252627282930313233343536public class Test &#123; /** * @param args */ public static void main(String[] args) &#123; try &#123; // 第一步：new一个Student，这一步不可少 Student demoStudent = new Student(); // 第二步：通过Class类来实现的反射机制，所以需要获得Student的Class Class&lt;Student&gt; studentClass = Student.class; // 或者通过包名forName来获得： // Class&lt;?&gt; studentClass = Class.forName("com.test.inflect.Student"); // 第三步：构造需要调用的方法的参数 Class nameArea = String.class; Class ageArea = int.class; // 第四步：使用getDeclaredMethod，这步是反射机制的精髓。该方法的参数分别是要获得的方法名，以及要获得的方法的参数类型，前者是String类型，后者是Class&lt;?&gt;类型 Method setNameMethod = studentClass.getDeclaredMethod("setName", nameArea); Method setAgeMethod = studentClass.getDeclaredMethod("setAge", ageArea); Method printMethod = studentClass.getDeclaredMethod("print", (Class[]) null); // setAccessible(true)并不一定需要，因为默认的就是true. printMethod.setAccessible(true); setAgeMethod.setAccessible(true); setNameMethod.setAccessible(true); // 第五步：使用invoke调用方法。第一个参数是调用方法的发出者，后面的参数则依次是调用的方法的参数 setNameMethod.invoke(demoStudent, "Vensent"); setAgeMethod.invoke(demoStudent, 23); printMethod.invoke(demoStudent, (Object[]) null); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 运行上述测试代码，可以得到如下结果：12This Student is: Vensent,This Student is 23 years old. 疑惑细心的读者可能会发现在上述的例子中，如果我们直接使用demoStudent.setName(String)、demoStudent.setAge(int)、demoStudent.print()不就完事了么，为什么还要去用什么反射机制？劳神费力不说，getDeclaredMethod、invoke还这么复杂，稍不留神就可能用错。笔者一开始也是这样想的，而且这样的想法也持续了很长的时间。到底反射机制是在什么样的情况下可以使用的？而在最近写Android的代码的时候却多次碰到了这种情况。通过下面一个例子来具体说明。 反射用途1——冲破private的限制假设我们在上述的Student代码中将两个set的方法变为private，如下所示：12345678910111213141516171819202122232425262728public class Student &#123; private String name; private int age; public String getName() &#123; return name; &#125; private void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; private void setAge(int age) &#123; this.age = age; &#125; public Student() &#123; &#125; public void print() &#123; System.out.println("This Student is: " + name + ","); System.out.println("This Student is " + age + " years old."); &#125;&#125; 没错，看到这里读者可能有一种恍然大悟的感觉。如果将两个set方法都换成了private来修饰的话，那么name和age两个成员变量是无法通过demoStudent直接调用set方法来进行赋值的了。但是我们同样执行上述Test代码依然可以得到以下相同的结果：12This Student is: Vensent,This Student is 23 years old. 这样做就冲破了代码中private的限制而可以调用到private方法。通过这样的方法绕过了安全的检查，好像多少有一点不安全的感觉。例如上述的做法在实际的操作中还有很多的，读者在自己编程中可以多留意。以上完成了第一节的内容，请继续阅读：从Java的反射机制说开去。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>反射机制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心花路放——开到荼蘼又何妨]]></title>
    <url>%2F2014%2F10%2F02%2F%E5%BF%83%E8%8A%B1%E8%B7%AF%E6%94%BE%E2%80%94%E2%80%94%E5%BC%80%E5%88%B0%E8%8D%BC%E8%98%BC%E5%8F%88%E4%BD%95%E5%A6%A8%2F</url>
    <content type="text"><![CDATA[宁浩在《心花路放》之前，最近看的一部宁浩拍的电影是《无人区》。当时正好是大四下，选了一门课程叫“后现代影视文化赏析”，而这部片子也算是宁浩后现代艺术的一个造诣颇高的代表。宁浩导的片子一直是故事情节取胜，除了《无人区》，《疯狂的石头》还有《疯狂的赛车》都是极为精彩的。而这一次的《心花路放》，剧本也是过得去的。至少比起一个多月之前上映的《后会无期》好了太多。通过《心花路放》，宁浩给很多年轻的导演上了一课：电影，想要有自己的表达之前，要把故事先讲明白。看电影的时候两条主线安排的很好，很明显的同时调子也略有不同：耿浩郝义这边滑稽好笑，一路看似轻松却盖不住耿浩的压抑；小米这边轻松愉快，文艺气息十足，在大理悠闲的表面也仿佛有自己的欲望。看电影的时候，我一直在想，这两条线如何汇在一起。却直到最后才发现原来，这两条线原来根本不在同一个时间。最后的交汇让人非常诧异的同时，也叹服导演独具匠心的安排。最后的结尾，像极了《和莎莫的500天》的结尾，耿浩遇到了郝义婚礼上的伴娘，是一个教音乐的姑娘，两人并肩前行，相谈甚欢。夏天结束了，遇到了秋。 袁泉在看电影的时候我一直在回忆，袁泉在影片中的演出仿佛我认识的一个姑娘。来到洱海的客栈时的奔跑跳跃，遇到狗狗受伤的时候可怜好心，和酒吧老板理论喝酒扔下钱的洒脱。这和《后会无期》中说出那句“喜欢就会放肆，但爱就是克制”的刘莺莺是完全不一样的，虽然在《心》中袁泉修水管那场面和《后》中换灯泡有点像。袁泉和很多的中国女明星不一样。外貌上看，袁泉的眼睛很漂亮，眼窝很深，眼睛很大，在剧中很多时候你看着看着就陷进去了。本来就对大眼姑娘没有抵抗力。而袁泉也一如既往地戴上了帽子，十足的文艺气息，哈。不过对于袁泉饰演的康小米，也真的是我心中一直非常心仪的style。可以蠢、可以逗，也可以活蹦乱跳，可以心中也有蛮多文艺想法；可以无缘无故地爱上一首歌，之后毫无犹豫地来场说走就走的旅行；也可以为了一张碟费劲全力地去找。 但是，说了这么多还是要有个“但是”。初遇的时候都是美好，你带着狗，我唱着歌。但是生活不仅仅是恋爱，还有更多现实的问题。所以一句“你要好好想想未来，我们要认清现实。”就足够给两人的恋情画上句号。 黄渤、徐峥不知道这两个家伙一块儿拍了多少让人记忆犹新的电影，每一部都可以给大家带来足够的欢笑。这一次的旅程开始于“约炮”的目的，借着送道具之由，向西驶去。耿浩一直被郝义视为Loser，泡妞耿浩不会，前妻他也摆脱不了，活在过去的阴影里，不能自拔。果汁一直带着，也是过去给的羁绊。两人一路吵吵闹闹，直到最后两把真枪面对面地指着对方的时候，过去二人看似兄弟的情谊才被一枪打散。话虽这么说，也是耿浩在洱海酒吧中被人打得七荤八素的时候郝义的出现，让人也有些热泪盈眶。生活，不仅仅是只有爱情，一定要记住爱情不是生活的全部。即使你把爱情看得再重，生活也还有很多东西，友情便是其中之一，哥们永远活在你的身边，他们会在你需要的第一时间出现。也或许，比起爱情，友情或许是更靠得住的东西。 文艺=Loser？写这篇文章的时候电脑里一直在放着郝云的《去大理》，也就是影片中那首好听的插曲。和朋友聊天的时候，她说文艺就是Loser们自己不肯承认失败的借口，也是自己躲不掉的标签。我不知道怎么回复她。文艺与否，在我看来，只是自己选择生活的方式不同，无关失败成功。文艺青年们也许喜欢通过文艺的东西来逃离一段自己不想面对的现实，但是这真的无关失败成功。生活态度，也是自己选择的路，无关对错。《去大理》这样唱着： 谁的头顶上没有灰尘谁的肩上没有过齿痕也许爱情就在洱海边 等着也许故事正在发生着 尴尬影片结尾的时候出现了三段对白的“尴尬”（也不知道专业术语是什么，姑且先这样说），印象比较深。也感慨于宁浩对其出色的处理。第一段来自耿浩和康小米在客栈的初遇： “你笑什么。”“你怎么就知道我笑了，那你笑什么。” 初遇的时候相互倾慕的美好也莫过如此吧。稍带羞涩的甜蜜，观众也被这样的情节很迅速的带入了。 第二段来自耿浩和康小米在郝义的婚礼结束时： “你怎么瘦了，记得多吃点。”“……”“你笑什么。”“你怎么知道我笑了，那你笑什么。” 还是同样的话，两人之间还是同样的尴尬。少了一份当初的羞涩，多了一份时间洗涤之后的无奈。 第三段来自耿浩与伴娘行走之中对白，这一段两人在对话开始之前有长时间的留白： “你是做什么的啊？”“我是音乐老师，教音乐的。你呢？”“那赶了巧的，我是搞音乐的。我正好这两天正好有两个样张，想请你请教一下。”“请教不敢当，倒是可以看看。” 又是一段感情的开始，当初的美好，化成现在继续生活的从容。 关于现实最后，想要说一说爱情不得不面对的，现实。网上很多人说康小米就如同一个绿茶婊，为了自己为了钱最后离开了耿浩。我不觉得是这样。恋爱有自己的方式，也许一开始就选择了自己不想要的方式，亦或许是过了很久之后才发现这样的方式不是自己的初衷。爱上别人，或者说放弃眼前都是一个借口，借口来脱离现在不想要的选择。所以离开，所以伤害。很久之后，才发现。这样的姑娘，值得爱，也值得去为她受伤，值得被她放弃，值得让自己认清现实。最后，也值得祝福。]]></content>
      <categories>
        <category>观影杂记</category>
      </categories>
      <tags>
        <tag>心花路放</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[骑行记1——莺山]]></title>
    <url>%2F2014%2F09%2F28%2F%E9%AA%91%E8%A1%8C%E8%AE%B01%E2%80%94%E2%80%94%E8%8E%BA%E5%B1%B1%2F</url>
    <content type="text"><![CDATA[写在前面秋高气爽，正是一年中户外骑行最好的季节。南京的夏季没有想象中那样炎热。从东莞产线实习结束来到南京，没有几天出过太阳。天气不晴朗，也未见过蓝天，青奥之后，关于“南京空气不好”的传言也越来越开始变成事实。中秋信用卡到了之后，也去买了一辆自行车，一来方便每早骑车上班，不挤地铁，同时也可以多个十来分钟的睡眠。车子倒是一般，花了不到两千，买车时给老板说买个“入门级”就好，老板扫了我一眼，“现在入门级也差不多两三千左右。”所以，一辆美利达的雄狮，因可观的性价比被我选中。这周末也就是自行车刚到手，还没有去把一些必要的装备买齐，趁着兴头，和同事一行四人骑车出行了。首次出行距离也不远，全程大概80公里左右，一路除去各种辛苦劳累，乐趣也自在其中。 骑行路线骑行选择是西善桥——205国道——106县道——337省道——莺山，然后转入将军大道，一路骑行并返回，大部分骑行时间是在江宁区中。 西善桥出来之后，骑入了205国道之后，一路的标识也非常多，很多也是直接指明了到马鞍山的距离。当年在华科读书的时候背后的那个“马鞍山森林公园”是我们则正几乎是我们所有华科人烧烤野炊的圣地；除此之外，好友天林的老家也在这个马鞍山。不过此行的目的地并不在马鞍山，所以转入106县道之后就可以与马鞍山越来越远了。不得不说，秋天骑行的确是非常舒服的。没有夏季的炎热，衣服宽松，微微发汗，不至于浸湿。不过在县道上骑行也确实蛋疼，上下坡间隔，沿途也是沙尘飞扬。有些装备看来也是要买了才是。在路边碰到卖香瓜的一个大姐，香瓜倒是和我家乡的味道无二，个大、香甜，我们停下也同时帮大姐招揽了不少沿途的汽车司机。转入337省道，路面开始宽敞，沿途各类农作物基地开始出现，接近莺山附近，农家乐多起来。愈近中午，肚子也越饿，哈哈。直到转入了将军大道，我们才开始了今天的中饭。插一句，这个将军大道真是纵贯江宁南北啊，下午回去就一直只在将军大道上面骑了。中饭我们就着路边的一个小馆子吃的，小份的酸菜鱼各种赞，鱼汤也喝了好几碗。另外的小炒肉也行。价格也还好，四个人四个菜79元。下午本来是想经过牛首山风景区返回的，但是一看路线离南京航天航空大学已经很近了，大家也一致同意去南航看看。所以一路沿着将军大道往北，沿途也经过了河海大学在江宁的校区，也到了南航。想到这里是雀哥的母校，不禁赶紧掏出手机来了几张到此一游照。不过说实话，雀哥母校也忒抠门小气，骑个车的还不让进学校。西门北门都不让，所以里面究竟长啥样有多大就不得而知了。但是经过了学校门口也有其他的好处，哈哈，站门口的美女还是见着不少。工作了之后才发现，要看漂亮姑娘还是得去学校啊。（泪） 感个想最后赶回的路上沿河骑的，后来我在网上查了一下，这河的下游就是秦淮。所以这上游的这段，是不是也是秦淮呢。当时要是知道是这样我一定要赋诗一首，想当年，夜泊秦淮，宿醉江岸，多少也是我的一个梦想之一啊。骑游处子行，顺利结束。不过念着酸疼的菊花，还是要说，坐垫软套还是该买了，其他什么的，码表、手套、护目镜等等，骑行的装备真的还需要再全面一点才行。无论什么季节，出门防晒霜还是要涂一些。之前一直没有涂防晒霜的习惯，直到工作入职培训在海边晒伤，才意识到防晒的重要性。期待今后的骑行。]]></content>
      <categories>
        <category>骑行</category>
      </categories>
      <tags>
        <tag>骑行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于问题“重度游戏患者该如何找女朋友”]]></title>
    <url>%2F2014%2F09%2F23%2F%E5%85%B3%E4%BA%8E%E9%97%AE%E9%A2%98%E2%80%9C%E9%87%8D%E5%BA%A6%E6%B8%B8%E6%88%8F%E6%82%A3%E8%80%85%E8%AF%A5%E5%A6%82%E4%BD%95%E6%89%BE%E5%A5%B3%E6%9C%8B%E5%8F%8B%E2%80%9D%2F</url>
    <content type="text"><![CDATA[前段时间朋友在知乎发了一个帖子，重度游戏患者该如何找女朋友。问题挺精彩的，笔者也对这个问题进行了思考，并给出了以下自己的回答。 谢邀。这个问题说大不大，说小也不小。如果仅仅从楼主分析的角度来下结论的话，也许会有失偏颇。毕竟一个例子，或者说一个反例对于问题的说明实际上没有太大的指导意义。所以，笔者想要从以下几点来说明这个问题。 重度游戏患者的定义光从楼主的描述情况来说，楼主的舍友也许会是一个工科男生，或者说有点不正常的文科男生。而对于重度游戏患者来说，如果仅仅是楼主提到的描述，还不能完全算是一个重度游戏患者。笔者身边曾不乏有各类重度游戏患者现，他们的出现简直是为了颠覆你对这个世界的认识的。男生A，笔者大学时的一个同学（后来有和他合住过一阵子，对游戏的执着，啧啧啧），电脑里有无数的游戏，电脑配置可以说是玩家顶配。其大学里即使在有面对几门考试同时出现的挑战的时候，也依然坚持每天至少四个小时的游戏。A君也确实很屌，游戏涉猎面极广，无所不涉及，无所不精。而且，关键的是，A直到大三下依然保持着不挂科的记录。直到考了电磁场与电磁波，因考试时坐得位置太过靠前没有人扶持，挂的毫无悬念，A金刚不坏之身才终于被破掉了。当然A虽然考场失意，但是情场却不曾失意。在笔者锁认识的人中，也只有A能配得上“阅女无数”这个称号。写到这里，笔者其实想说，抛开其他已知的各类情况，如：长相、家庭条件、工作等等，重度游戏患者与找不到女朋友这个话题是联系不到一起的。 关于“找”女朋友相信很多工科屌丝男都会有这样的感觉，为什么找女朋友这么困难啊。实际上我们一直混淆了一个概念就是“找”女朋友和“追”女朋友（后者可能说着有点别扭哈，或者叫追女生更合适一些）。找，给人的感觉就是，自己的东西不见了，然后花一点时间来寻。殊不知在工科学校或者工作一群工程师（再或者程序猿）中，女生永远不可能没有选择的机会。机会必须要自己把握，必须要自己去“追”求。同样，在这里我们同样要举出刚刚提到的A君。在一次酒足饭饱之后，A在蒙蒙的灯光下开始讲述自己香艳故事。听得大家无不是口水直流（关于A讲故事的能力众方说法不一，但是笔者看来除去扯淡的部分，还是非常不错的。）。末了，A总结道，“其实大家真的要放开。你看我，和大家比起来，我TMD就是一个屌丝。我们学工科的怎么会没有市场。妹子们空虚着呢。我现在只是给大家铺铺路。大家要相信自己的能力。”说这话时，A君右手握着一双筷子，不停地敲着碗，颇有一番指点江山的气势。在笔者看来，只要方法对，无论屌丝与否，敢于追求，正如A君所说，要放得开，到最后都可以抱得美人归。（如果非要跟我扯什么“长得太惨”、“太太太屌丝”，那么我也没有办法了。） 关于“如何”找曾经有人说过，人家高富帅就是可以给姑娘偶像剧的感觉，你说姑娘为什么会不喜欢。不要觉得女生俗，女生都是这样的，女生永远比同龄的男生成熟得早，永远比同龄的男生现实。如果你只会玩游戏，重度痴迷，长期把时间奉献给游戏，不要期望女生会对你说，“哇，你这个英雄好帅哦，可以带我练级么。”，也不要指望女生会对你说，“你能不能把大鱼给我哦，你玩游戏真的好厉害好厉害。”（当然也有反例，不过笔者在这个话题只讨论正常的情况。）重度游戏患者真的不要紧，但是你要有生活，要有情调，要让女生觉得你有Level。而这些都是基础，除此之外，你还要懂女生。女生想看《桃花侠大战菊花怪》，你个工科男就不要只想着《变形金刚》；女生想看《爸爸去哪儿》，你就不要只顾着《天下足球》；女生想听苏打绿那样的娘音，你就不要只爱陈奕迅那样的忧郁。投其所好，是追女生的第一要义。（说到这，楼主已是两行清泪。PS.今天楼主脚伤得厉害。） 总结总结一下，工科男并不是女生的盲点。楼主可以劝劝自己的这位盆友，周末带他出去逛逛街，（不要老是淘宝天猫的，出去逛逛街，具备了这项技能，以后也可以陪妹子逛街。）四条牛仔裤可以继续穿，洞洞鞋必须换了。然后教他玩玩豆瓣，或者教他玩玩陌陌，约炮都不用，学着和妹子搭搭讪还是OK的。（楼主，别说这些你都不会。看你的说法，必然是有女盆友的对吧。呵呵。）（PS.我刚刚又和A君聊了一下，A君说，楼主的舍友如果需要A君的联系方式，可以尽管找他。如果需要，我可以告诉你他的联系方式。）]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>女朋友</tag>
        <tag>谈恋爱</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[东京爱情故事——写在结局之后]]></title>
    <url>%2F2014%2F05%2F20%2F%E4%B8%9C%E4%BA%AC%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E5%86%99%E5%9C%A8%E7%BB%93%E5%B1%80%E4%B9%8B%E5%90%8E%2F</url>
    <content type="text"><![CDATA[很庆幸自己在这样的一个年龄看到了这样的一部电视剧。《东京爱情故事》想必对于上个世纪60、70乃至80年代出生的人都不会觉得陌生。赤名莉香是剧中的灵魂人物，在剧末也成了电视剧里面唯一一个的悲剧人物。作为一个90年代出生的人，能在东爱风靡了几十年之后重温那个年代的爱情，也是一段值得记忆的事情了。在聊这样一部作品之前，我要说的是，在感情面前，永远没有错与对，任何一种对待感情的方式都是没有对错的，只有适合不适合，遇到了是否合适的人。也许这样说，也会有一点片面。看完了电视剧的时候，心里也为莉香有了一丝淡淡的遗憾。而也是因为这样的结局安排，反而使得东爱成了一部出色的作品，让人永远铭记。那就从结局聊起。莉香来到了永尾完治的家乡爱媛县，在那里遇到了完治。在完结篇的上一集的最后，两个人唯美的相遇仿佛预示着这是一个属于莉香和完治的美好的结局。但是事实不是这样，莉香和完治约好在两个小时之后，也就是下午的4:48一起乘坐回东京的车，莉香给完治最后两个小时，让他做出最后的决定。完治在列车行将开走的时候赶到了车站，而却被列车员告知，莉香已经在下午4:33的时候乘坐列车离开了。两个人就这样错过，三年后相遇已是时过境迁。 那么我们回到电视剧，回到列车即将出发的时间。如果说莉香把4:35的列车错误地当做了4:48的列车，看到完治没有来，而上了列车（也真的不排除这样一个可能，因为电视剧前面有一个细节，莉香在两点左右看表的时候看的是完治的手表，莉香到达车站的时候，没有仔细看时间而乘错了车，先完治一步回了东京。），那么这样的故事，也许是悲剧，但是不是那么地让人心痛。毕竟，如果是这样，我们可以简单地将其理解成是一次意外的错过。那么观众心里也会好受不少。人生有多少次错过啊，这样也是多么美好。但是我们继续一想，发现这样的推测是多么不堪一击。因为，莉香把手帕放在了站台上，因为莉香给完治写了明信片。这一切都告诉着我们，莉香似乎早就已经决定了离开完治，在很久之前也许就做了这样的决定。她知道她给完治的爱太重，完治几乎是无法承担。她知道在完治心中，里美永远是过不去的坎。如果让完治做出了选择留在了自己的身边，缠绕在两人之间依然会有里美。所以，莉香决定退出，莉香决定不再让完治纠结。但是即使是寄出了明信片，说过了离别，莉香心里依然希望完治回到自己的身边，以一种绝对的、毫不含糊的方式回到自己的身边，这是她心里依旧存在的一点点小小的希望，她相信如果完治能够这样，能够炙热地爱自己，一定不会让自己像以前那样等那么久、等那么久。要知道，完治每一次和里美约会的时候，都会提前15分钟到达约定的地点的。所以，莉香把最后的时间定在了4:35，这是她的极限，这是她能够接受完治可以回到自己身边的最后的极限。但是莉香知道完治不会，她知道。莉香一直到了最后也都知道，完治不会。所以莉香失约，这也是她第一次也是唯一一次对完治失约。想到这里，我们可不可以继续猜测莉香可能的其它的心理。莉香又会不会是害怕呢？莉香害怕如果等到了4:48完治依然没有出现的情景。如果到了4:48完治依然没有出现，那么这样的现实对于莉香来说会是多么残忍。莉香害怕，因为完治那样伤害了自己很多很多次，她不想在自己离开之前依然感受到那样的伤害。与其那样，不如让自己轻松一些。提前十五分钟悄悄地离开，不带有任何一点留恋。莉香，这样想来会让人觉得她是多么勇敢。 回到这个结局。上面我们是从莉香的角度去猜想她最后离开的心理。那么完治呢？完治在这个时候到底是怎么想的。完治是犹豫，抑或是忧郁的。不管莉香的微笑是多么甜美，完治依然不能把自己全部交给莉香。即使在看到刻有自己和莉香名字的木头时，也不会有太多的动摇。即使莉香再灿烂的回眸，完治也不会有多强烈的改变，因为他不会选择挽留莉香。所以4:48只是一个简单的时间，如果时间是晚上7点、8点，抑或是第二天，完治依然会思考到自己不能继续思考为止，思考到自己没有时间继续思考为止。他会犹豫不决，他这样亦不会得到莉香。难免悲哀。很多人说，莉香要是等到了4:48，是不是就会与完治相遇，然后两个人最终走到了一起。我觉得不会这样，即使到了火车站，完治依然不会挽留，因为在最后一刻做出的决定一定是不靠谱的。完治即使在那个时候见到莉香，也许也只是会说，“莉香，以后过得轻松一些吧。不要太难过。”这样一想，一下子觉得好难受。毕竟在心里，自己还是很希望两个人可以最终走到一起的。 我知道，有些东西不能反复地看。但是《东爱》的结局我真的就是反复看了好几次。我甚至可以觉得，在最后莉香是没有完全对完治说了“sayonara”的。在日语里面，“sayonara”表示两个人长久地别离，甚至可以说是永别。但是莉香没有这样，她在给完治的明信片中说，她不会和完治说“sayonara”，她相信两个人可以再见。在手帕上，我们看到的也只是“拜拜”两个字，不是“sayonara”。莉香在洛杉矶半年之后就回到了东京，莉香是期待着完治的成熟，期待着有一个更成熟的男人来懂得自己的爱。这样的想法也深深地刺痛了我自己。莉香相信会有重新遇见的那一天，但是见到了，完治已成了她人夫。是有多么地难堪难受。 很多人因此会恨完治，恨他对莉香的不公，恨他没有珍惜这样一个女子。但是不能这样，爱情不是说我们想要轻松就可以轻松的。真的，不是这样的。所以，看到最后，我们可以理解成莉香为完治做了一个属于他本应该做的决定。她不会遗憾，她不会。生命因为一个人可以这样燃烧一次，已经是可以足够回忆的一件事情。但是，看到莉香在火车上，一个人对着照片哭泣，竟也会莫名地觉得心疼。整部电视剧下来，几乎很少看到莉香没有在镜头中笑过，她是那样绚烂的女子，笑容仿佛是可以照亮整个世界，而在列车上哭成那样，也是真的是属于她自己的一段刻骨铭心了。 会期待在东京的街头与完治的偶遇，这也应该是莉香回到东京的一个原因。但是，不会与完治继续联系，宁愿就这样悄无声息地消失在他的生活之中。那属于年轻的时候的傻事，就应该留在人来人往的路途之中，只在不经意间勾起，往心里微微地笑。 相信时间也会告诉完治，那年，有那样的一个女子，曾用自己的生命爱过自己。]]></content>
      <categories>
        <category>观影杂记</category>
      </categories>
      <tags>
        <tag>东爱</tag>
        <tag>东京爱情故事</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雏菊——那天，它们终于开满了整个山野]]></title>
    <url>%2F2011%2F01%2F27%2F%E9%9B%8F%E8%8F%8A%E2%80%94%E2%80%94%E9%82%A3%E5%A4%A9%EF%BC%8C%E5%AE%83%E4%BB%AC%E7%BB%88%E4%BA%8E%E5%BC%80%E6%BB%A1%E4%BA%86%E6%95%B4%E4%B8%AA%E5%B1%B1%E9%87%8E%2F</url>
    <content type="text"><![CDATA[说实话这部电影给人最直接的感觉就是压抑，非常的压抑。应该说这也是导演在设计时做的很好，第一，电影用到了很多的留白，这样做配合起并不多的人物的对话，就让观众在看电影时不断地思考，思考剧情，思考这个悲剧，进而压抑感愈发强烈。第二，艺术。不知道怎么讲，我觉得在看到梵高的时候就是压抑，很明艳的压抑，从他的《向日葵》我就有这种感觉，梵高本来就是这样，他的艺术精品全是自己处于精神分裂状态下创作出来的。这部影片的艺术某种意义上说就是有了这样的病态的艺术感觉，进而压抑。 然后是剧情的设置，不得不佩服编剧的想象力。其实，一些商业大片，枪战、谍战、武侠什么的，那些剧情并不是普通人做不出来的，而《雏菊》却真正在这上面吸引了我。剧情的矛盾化，情节的曲折程度都足够让人赞叹。两个对立的男人爱上了同一个女人，够残酷，又混上艺术、枪战，有点海岩的味道，但是更直接，更决绝。 慧瑛热爱艺术，喜欢雏菊，喜欢画雏菊，期待有一场爱情。在唯美的阿姆斯特丹，这一切的确是那样美好。但是她却爱上了正佑，这个国际刑警。这段爱情从此改变了她和他的命运，以及一个一直暗恋着慧瑛的人的命运。爱情在这部影片里就像雏菊一般，它简单，它单纯，它明丽，但是最后终究还是沾上了那一抹樱红的血色。爱情确实是这样，它永远会败给现实。 直到影片最后我依然不知道那位一直爱着慧瑛的那名男子的名字，但是我知道，慧瑛在最后一刻终究是爱上了他。虽然，这已太迟。但是，这已足够了。他为了她付出了这么多，他甚至给了她生命，虽然雏菊依然那样开着，虽然本该他们相恋，那场相识很早，但是相恋却是那样的迟，迟的仿佛隔世。 在我看来，正佑在影片仿佛成了配角。他是那样的悲凉，是的，我从他的眼睛里只是看到了苍凉的感觉，他很适合这部影片，这部艺术片。正佑失去了生命，失去了慧瑛，哪怕他们的相遇是那样的巧合，哪怕他们有那样的美好，我相信正佑是带着愧疚感来爱慧瑛的。雏菊是那样纯净，他们却错过了那样的爱情，只是沾上了现实那样的泥垢。 影片很简单，不像我喜欢的那样很逻辑化的影片，但是这样的影片却要求我们对生活，对没有那么夸张的生活进行思考。就像影片一样，是否我们也向慧瑛那样错过了太多太多的温暖，错过了我们值得铭记的点滴。要知道，在你生命中出现的每一个人对于你来说都是一个奇迹，我们能够相见已经很不可思议了，我们不能只是对方生命的过客。但是慧瑛是幸运的，至少在最后她明白这样的男子在她生命的存在，至少她也还珍存这段美好，哪怕只是一小会。 而，我们是否也向那位男子一样，对自己爱情那样付出，哪怕对方早有所属，哪怕也可以坚守最柔软的底线，只是为了自己的爱人的一切，为了她的幸福。又想到了海岩的那本书名《拿什么拯救你我的爱人》，呵呵。 说多了，感觉《雏菊》是的有点让我感动。影片里缓缓流淌的插曲，我把它下了下来，每每听到，我依然会想起，那个下雨的下午，那个开满雏菊的草地，那样唯美的爱情，那样残酷的现实，那样让人扼腕的悲剧……]]></content>
      <categories>
        <category>观影杂记</category>
      </categories>
      <tags>
        <tag>雏菊</tag>
      </tags>
  </entry>
</search>